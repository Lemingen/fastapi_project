version: "3.8"

services:

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi-app
    command: uvicorn api:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "8001:8000"
    depends_on:
      - db
      - rabbitmq
    networks:
      - app_network


  db:
    image: postgres:16.4
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network


  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery-worker
    command: celery -A tasks worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - db
    environment:
      - DATABASE_URL=postgresql://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    networks:
      - app_network


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_in_docker
    ports:
      - "15673:15672"  # порт для веб-менеджера RabbitMQ
      - "5673:5672"    # основной порт RabbitMQ
    networks:
      - app_network


  flower:
    image: mher/flower
    container_name: flower
    ports:
      - "5556:5555"
    environment:
      - FLOWER_BASIC_AUTH=username:password
      - CELERY_BROKER=${CELERY_BROKER_URL}
    depends_on:
      - rabbitmq
    networks:
      - app_network


  tesseract:
    image: jitesoft/tesseract-ocr
    container_name: tesseract
    volumes:
      - .:/app
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: